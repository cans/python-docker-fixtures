---
version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  test:
    description: Run the test suite
    machine:
      image: ubuntu-2004:202101-01
      # image: circleci/classic:201808-01
    parameters:
      pyversion:
        type: string
        default: "3.7"

    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-<< parameters.pyversion >>-v2
    - run:
        name: setup environment
        command: |
          ./.circleci/test-venv.sh "<< parameters.pyversion >>"

    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-<< parameters.pyversion >>-v2
        paths:
        - ~/.venv
        - ~/docker-fixtures/src/dockerfixtures.egg-info

    - run:
        name: Run tests
        command: |
          . ~/.venv/bin/activate
          pytest --cov-report=xml --junitxml=test-reports/junit.xml

    - store_test_results:
        path: test-reports

    - store_artifacts:
        path: coverage.xml
        destiation: coverage

    - codecov/upload:
        file: coverage.xml

    working_directory: ~/docker-fixtures


  build_package:
    docker:
    - image: python:<<parameters.pyversion>>
    parameters:
      pyversion:
        type: string
        default: "3.7"
    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-packaging-<< parameters.pyversion >>-v3
    - run:
        name: "Configure Packaging Virtual environment"
        command: |
          ./.circleci/package-venv.sh "<< parameters.pyversion >>"
    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-packaging-<< parameters.pyversion >>-v3
        paths:
          - ~/.venv
          - ~/docker-fixtures/src/dockerfixtures.egg-info
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: "Build and Upload Package"
        command: |
          ./.circleci/package-build.sh
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
        - version
        - '*.whl'
    working_directory: ~/docker-fixtures

  validate_package:
    description: |
      Ensure the produced package is valide and self sufficient

      Meaning:
      - it can be installed
      - no development dependency made its way into the package itself
    machine:
      image: circleci/classic:201808-01
    parameters:
      pyversion:
        type: string
        default: "3.7"

    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - restore_cache:
        key: pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v0
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v0
    - run:
        name: setup environment
        command: |
          ./.circleci/package-validate-venv.sh "<< parameters.pyversion >>"
    - save_cache:
        key: pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v0
        paths:
        - ~/package-cache/

    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v0
        paths:
        - ~/package-cache/

    - run:
        name: "Ensure package is valid"
        command: |
          ./.circleci/package-validate.sh

  publish_package:
    docker:
    - image: python:<<parameters.pyversion>>
    parameters:
      pyversion:
        type: string
        default: "3.7"
      pypiapitoken:
        type: string
        default: "${PYPI_TEST_API_TOKEN}"
      pypirepository:
        type: string
        default: "${PYPI_TEST_REPOSITORY}"

    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-packaging-<< parameters.pyversion >>-v3

    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: "Build and Upload Package"
        command: |
          ./.circleci/package-publish.sh "<< parameters.pypirepository >>" "<< parameters.pypiapitoken >>"
    working_directory: ~/docker-fixtures


workflows:
  version: 2
  test-and-package:
    parameters:
      pypirepository:
        type: string
        default: "${PYPI_TEST_REPOSITORY}"
    jobs:
    - test:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "test3.6"
        pyversion: "3.6"

    - test:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "test3.7"
        pyversion: "3.7"
    - test:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "test3.8"
        pyversion: "3.8"

    - test:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "test3.9"
        pyversion: "3.9"

    # Not available yet
    # - test:
    #     filters:
    #       tags:
    #         only:
    #         - /v[0-9]+\.[0-9]+\.[0-9]+/
    #     name: "test3.8"
    #     pyversion: "3.8"

    - build_package:
        filters:
          # branches:
          #   ignore:
          #   - /.*/
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Build package"
        requires:
        - test3.6
        - test3.7
        - test3.8
        - test3.9
        pyversion: "3.7"

    - validate_package:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package with Python 3.6"
        pyversion: "3.6"
        requires:
        - "Build package"

    - validate_package:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package with Python 3.7"
        pyversion: "3.7"
        requires:
        - "Build package"

    - validate_package:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package with Python 3.8"
        pyversion: "3.8"
        requires:
        - "Build package"

    - validate_package:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package with Python 3.9"
        pyversion: "3.9"
        requires:
        - "Build package"

    - publish_package:
        name: "Publish package"
        filters:
          branches:
            ignore:
            - /.*/
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        pyversion: "3.7"
        pypiapitoken: "${PYPI_API_TOKEN}"
        pypirepository: "https://upload.pypi.org/legacy/"
        requires:
        - "Validate Package with Python 3.6"
        - "Validate Package with Python 3.7"
        - "Validate Package with Python 3.8"
        - "Validate Package with Python 3.9"

# vim: et:sw=2:syntax=yaml:ts=2:
