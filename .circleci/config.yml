---
version: 2.1

executors:
  docker-validator:
    docker:
    - image: python:<< parameters.pyversion >>-slim
    - image: subfuzion/netcat
      command:
      - '-vl'
      - '<< parameters.netcat_port >>'
      entrypoint:
      - nc
    parameters:
      netcat_port:
        default: '9876'
        description: TCP Port on which the netcat sidecar container should listen to
        type: string
      pyversion:
        type: string
        default: "3.7"
  vm:
    machine:
      image: ubuntu-2004:202101-01
    environment:
      VIRTUAL_MACHINE: True

orbs:
  codecov: codecov/codecov@1.1.3

jobs:
  test_on_vm:
    description: Run the test suite on VM to be able to start containers
    environment:
      VIRTUAL_MACHINE: true
    executor: vm
    parameters:
      pyversion:
        description: The Python version with which run this job
        default: "3.7"
        type: string
      testing_venv_cache_gen:
        description: |
          Generation number of the virtualenv cache used for running tests

          Increment the value if the cache becomes corrupted for some reason
        default: 3
        type: integer

    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-<< parameters.pyversion >>-v<< parameters.testing_venv_cache_gen >>
    - run:
        name: setup environment
        command: |
          ./.circleci/test-venv.sh "<< parameters.pyversion >>"

    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-<< parameters.pyversion >>-v<< parameters.testing_venv_cache_gen >>
        paths:
        - ~/.venv
        - ~/docker-fixtures/src/dockerfixtures.egg-info

    - run:
        name: Run tests
        command: |
          . ~/.venv/bin/activate
          pytest --cov-report=xml --junitxml=test-reports/junit.xml

    - store_test_results:
        path: test-reports

    - store_artifacts:
        path: coverage.xml
        destiation: coverage

    - codecov/upload:
        file: coverage.xml

    working_directory: ~/docker-fixtures


  build_package:
    docker:
    - image: python:<<parameters.pyversion>>
    parameters:
      packaging_venv_cache_gen:
        description: Generation number of the packaging venv cache
        default: 3
        type: integer
      pyversion:
        type: string
        default: "3.7"
    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-{{ checksum ".circleci/package-venv.sh" }}-packaging-<< parameters.pyversion >>-v<< parameters.packaging_venv_cache_gen >>
    - run:
        name: "Configure Packaging Virtual environment"
        command: |
          ./.circleci/package-venv.sh "<< parameters.pyversion >>"
    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-{{ checksum ".circleci/package-venv.sh" }}-packaging-<< parameters.pyversion >>-v<< parameters.packaging_venv_cache_gen >>
        paths:
          - ~/.venv
          - ~/docker-fixtures/src/dockerfixtures.egg-info
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: "Build and Upload Package"
        command: |
          ./.circleci/package-build.sh
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
        - version
        - '*.whl'
    working_directory: ~/docker-fixtures

  validate_package_on_vm:
    description: |
      Ensure the produced package is valide and self sufficient

      Meaning:
      - it can be installed
      - no development dependency made its way into the package itself
    executor: vm
    parameters:
      pkg_cache_gen:
        description: |
          Generation number of the package dependency cache used to validate the package on a vm
        default: 0
        type: integer
      pyversion:
        type: string
        default: "3.7"
      venv_cache_gen:
        description: The Python version with which run this job
        default: 0
        type: integer

    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - restore_cache:
        key: vm-pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.pkg_cache_gen >>
    - restore_cache:
        key: vm-venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.venv_cache_gen >>
    - run:
        name: setup environment
        command: |
          ./.circleci/package-validate-venv.sh "<< parameters.pyversion >>"
    - save_cache:
        key: vm-pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.pkg_cache_gen >>
        paths:
        - ~/package-cache/
    - save_cache:
        key: vm-venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.venv_cache_gen >>
        paths:
        - ~/package-cache/

    - run:
        name: "Ensure package is valid"
        command: |
          ./.circleci/package-validate.sh

  validate_package_on_docker:
    description: |
      Ensure the produced package is valide and self sufficient

      Meaning:
      - it can be installed
      - no development dependency made its way into the package itself
    environment:
      NETCAT_PORT: << parameters.netcat_port >>
    executor:
      name: docker-validator
      netcat_port: << parameters.netcat_port >>
      pyversion: << parameters.pyversion >>
    parameters:
      netcat_port:
        default: "9876"
        description: TCP Port on which the netcat sidecar container should listen to
        type: string
      pkg_cache_gen:
        default: 0
        description: |
          Generation of the package cache
        type: integer
      pyversion:
        default: "3.7"
        type: string
      venv_cache_gen:
        default: 0
        description: |
          Generation of the virtualenv cache
        type: integer

    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - restore_cache:
        key: pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.pkg_cache_gen >>
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.venv_cache_gen >>
    - run:
        name: setup environment
        command: |
          ./.circleci/package-validate-venv.sh "<< parameters.pyversion >>"
    - save_cache:
        key: pkg-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.pkg_cache_gen >>
        paths:
        - ~/package-cache/
    - save_cache:
        key: venv-{{ checksum "setup.cfg" }}-validating-<< parameters.pyversion >>-v<< parameters.venv_cache_gen >>
        paths:
        - ~/.venv
        - ~/docker-fixtures/src/dockerfixtures.egg-info
    - run:
        name: "Ensure package is valid"
        command: |
          ./.circleci/package-validate.sh

  publish_package:
    docker:
    - image: python:<<parameters.pyversion>>
    parameters:
      packaging_venv_cache_gen:
        description: Generation number of the packaging venv cache
        default: 3
        type: integer
      pyversion:
        type: string
        default: "3.7"
      pypiapitoken:
        type: string
        default: "${PYPI_TEST_API_TOKEN}"
      pypirepository:
        type: string
        default: "${PYPI_TEST_REPOSITORY}"

    steps:
    - checkout
    - restore_cache:
        key: venv-{{ checksum "setup.cfg" }}-packaging-<< parameters.pyversion >>-v<<parameters.packaging_venv_cache_gen>>

    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: "Build and Upload Package"
        command: |
          ./.circleci/package-publish.sh "<< parameters.pypirepository >>" "<< parameters.pypiapitoken >>"
    working_directory: ~/docker-fixtures


workflows:
  version: 2
  test-and-package:
    parameters:
      pypirepository:
        type: string
        default: "${PYPI_TEST_REPOSITORY}"
      packaging_pyversion:
        description: Python version used to package the library
        default: "3.9"
        type: string
      packaging_venv_cache_gen:
        description: Generation number of the packaging venv cache
        default: 3
        type: integer
    jobs:
    - test_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Run the tests on a VM with Python 3.6"
        pyversion: "3.6"

    - test_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Run the tests on a VM with Python 3.7"
        pyversion: "3.7"
    - test_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Run the tests on a VM with Python 3.8"
        pyversion: "3.8"

    - test_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Run the tests on a VM with Python 3.9"
        pyversion: "3.9"

    - build_package:
        filters:
          # branches:
          #   ignore:
          #   - /.*/
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Build package"
        packaging_venv_cache_gen: << parameters.packaging_venv_cache_gen >>
        pyversion: << parameters.packaging_pyversion >>
        requires:
        - "Run the tests on a VM with Python 3.6"
        - "Run the tests on a VM with Python 3.7"
        - "Run the tests on a VM with Python 3.8"
        - "Run the tests on a VM with Python 3.9"

    - validate_package_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on a VM with Python 3.6"
        pyversion: "3.6"
        requires:
        - "Build package"

    - validate_package_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on a VM with Python 3.7"
        pyversion: "3.7"
        requires:
        - "Build package"

    - validate_package_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on a VM with Python 3.8"
        pyversion: "3.8"
        requires:
        - "Build package"

    - validate_package_on_vm:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on a VM with Python 3.9"
        pyversion: "3.9"
        requires:
        - "Build package"

    - validate_package_on_docker:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on docker with Python 3.6"
        pyversion: "3.6"
        requires:
        - "Build package"

    - validate_package_on_docker:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on docker with Python 3.7"
        pyversion: "3.7"
        requires:
        - "Build package"

    - validate_package_on_docker:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on docker with Python 3.8"
        pyversion: "3.8"
        requires:
        - "Build package"

    - validate_package_on_docker:
        filters:
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        name: "Validate Package on docker with Python 3.9"
        pyversion: "3.9"
        requires:
        - "Build package"

    - publish_package:
        name: "Publish package"
        filters:
          branches:
            ignore:
            - /.*/
          tags:
            only:
            - /v[0-9]+\.[0-9]+\.[0-9]+/
        packaging_venv_cache_gen: << parameters.packaging_venv_cache_gen >>
        pyversion: << parameters.packaging_pyversion >>
        pypiapitoken: "${PYPI_API_TOKEN}"
        pypirepository: "https://upload.pypi.org/legacy/"
        requires:
        - "Validate Package on a VM with Python 3.6"
        - "Validate Package on a VM with Python 3.7"
        - "Validate Package on a VM with Python 3.8"
        - "Validate Package on a VM with Python 3.9"
        - "Validate Package on docker with Python 3.6"
        - "Validate Package on docker with Python 3.7"
        - "Validate Package on docker with Python 3.8"
        - "Validate Package on docker with Python 3.9"

# vim: et:sw=2:syntax=yaml:ts=2:
